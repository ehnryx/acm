#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")

#include <bits/stdc++.h>
using namespace std;
#define _USE_MATH_DEFINES

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef complex<ld> pt;
typedef vector<pt> pol;

const char nl = '\n';
const int INF = 0x3f3f3f3f;
const ll INFLL = 0x3f3f3f3f3f3f3f3f;
const ll MOD = 1e9+7;
const ld EPS = 1e-10;
mt19937 rng(chrono::high_resolution_clock::now().time_since_epoch().count());

vector<ll> approx = { 999998,992930,984481,975503,966194,956623,946858,936928,926852,916641,906331,895923,885412,874817,864171,853427,842629,831769,820825,809864,798822,787723,776615,765444,754207,742963,731646,720303,708936,697525,686074,674601,663091,651532,639977,628354,616720,605073,593389,581654,569937,558185,546367,534594,522736,510867,499013,487083,475162,463230,451274,439268,427265,415257,403199,391139,379071,366965,354861,342735,330577,318417,306239,294009,281829,269587,257353,245085,232827,220531,208219,195927,183555,171241,158875,146508,134104,121704,109282,96888,84451,77380,71630,65889,60150,54408,48650,43081,39397,35703,32034,28829,26139,23457,21303,19195,17437,15772,14316,13016,11836,10777,9830,8975,8206,7511,6887,6322,5814,5352,4932,4552,4207,3892,3606,3344,3105,2887,2687,2504,2336,2181,2040,1909,1788,1677,1575,1480,1391,1310,1234,1164,1099,1038,981,928,879,833,790,750,712,677,644,613,584,557,531,507,484,462,442,423,405,388,371,356,342,328,315,303,291,280,269,259,249,240,232,223,216,208,201,194,187,181,175,169,164,159,154,149,144,140,136,132,128,124,120,117,114,110,107,104,102,99,96,94,91,89,86,84,82,80,78,76,74,73,71,69,67,66,64,63,61,60,59,57,56,55,54,53,52,50,49,48,47,46,46,45,44,43,42,41,40,40,39,38,37,37,36,35,35,34,34,33,32,32,31,31,30,30,29,29,28,28,27,27,26,26,26,25,25,24,24,24,23,23,23,22,22,22,21,21,21,20,20,20,20,19,19,19,19,18,18,18,18,17,17,17,17,16,16,16,16,16,15,15,15,15,15,14,14,14,14,14,14,13,13,13,13,13,13,13,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };

int DOWN = 1e5;
int UP = 1e4;
int IDOWN = 800;
int IUP = 50;

ll sum;
int cutoff;
int n, t;

int count(int x, int cut) {
	sum = 0;
	int cnt = 0;
	int top = 0;
	for (int i=1; i<=x+1; i++) {
		int r = (cut+i-1)/i;
		top += ((cut+i-1)%i == 0);
		cnt += r;
		sum += r * ((ll)r*i - (i-2)) / 2;
	}
	sum -= (ll)min(top,cnt-n)*cut;
	return cnt;
}

ll solve(int x) {
	int left = min(n,max(1,t-DOWN));
	int right = min(n,t+UP);
	//int left = 1;
	//int right = 1e6;
	for (int r=0; left < right && r < 20; r++) {
		int mid = (left+right)/2;
		if (count(x, mid) < n) {
			left = mid+1;
		} else {
			right = mid;
		}
	}
	count(x, cutoff = left);
	return sum + (ll)x*t;
}

//#define FILEIO
int main() {
	ios::sync_with_stdio(0); cin.tie(0);
	cout << fixed << setprecision(10);
#ifdef FILEIO
	freopen("test.in", "r", stdin);
	freopen("test.out", "w", stdout);
#endif

	cin >> n >> t;
	
	//int right = max(0, (int)round(t/sqrt(n))-2);
	//int left = min(999, (int)round(t/sqrt(n))+3);
	//left = max(0, (int)round(n*approx[left]/1e6)-IDOWN);
	//right = min(n-1, (int)round(n*approx[right]/1e6)+IUP);
	int left = 0;
	int right = n-1;
	cerr << left << " " << right << nl;
	for (int r=0; left < right && r < 20; r++) {
		int mid = (left+right)/2;
		if (solve(mid) > solve(mid+1)) {
			left = mid+1;
		} else {
			right = mid;
		}
	}

	cout << solve(left) << nl;
	cout << left << nl;
	cerr << left << nl;
	int cnt = count(left, cutoff);
	int id = 0;
	for (int i=1; i<=left; i++) {
		int r = (cutoff+i-1)/i;
		if (cnt > n) {
			id += r-1;
			cnt--;
		} else {
			id += r;
		}
		cout << id << ' ';
	}
	cout << nl;

	return 0;
}
