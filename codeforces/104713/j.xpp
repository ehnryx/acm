%:include "utility/nd_array.h"
using ld = double;

__main__:
int n, m;
ll sx, sy, tx, ty;
cin >> m >> n >> sy >> sx >> ty >> tx;
nd_array<int, 2> g(n/2, m/2);
for(int i=0; i<n/2; i++) {
  for(int j=0; j<m/2; j++) {
    cin >> g(i, j);
  }
}

ll dx = tx - sx;
ll dy = ty - sy;
if(dx == 0 and dy == 0) {
  return void(cout << 0 << nl);
}

ld ans = sqrt(dx * dx + dy * dy);

ll gdiv = abs(gcd(dx, dy));
dx /= gdiv;
dy /= gdiv;

int dirx = (dx < 0 ? -1 : 1);
int diry = (dy < 0 ? -1 : 1);
dx = abs(dx);
dy = abs(dy);

if(dx == 0) {
  for(int i=sx/2, j=sy/2; j!=ty/2; j+=diry) {
    ans += abs(g(i, j) - g(i, j+diry));
  }
  return void(cout << ans << nl);
}

if(dy == 0) {
  for(int i=sx/2, j=sy/2; i!=tx/2; i+=dirx) {
    ans += abs(g(i, j) - g(i+dirx, j));
  }
  return void(cout << ans << nl);
}

// x -> dy*x
// y -> dx*y
sx *= dy;
sy *= dx;
tx *= dy;
ty *= dx;

//cerr << "TRY " << sx << " " << sy << " -> " << tx << " " << ty << endl;

for(ll x = sx, y = sy; x != tx or y != ty; ) {
  ll addx = dirx > 0 ? dy - x % dy : x % dy;
  ll addy = diry > 0 ? dx - y % dx : y % dx;
  if(addx == 0) addx += dy;
  if(addy == 0) addy += dx;

  if(addx == addy) {
    x += addx * dirx;
    y += addy * diry;
  } else if(addx < addy) {
    x += addx * dirx;
    y += addx * diry;
  } else {
    x += addy * dirx;
    y += addy * diry;
  }

  //cerr << "INT " << x << " " << y << endl;

  int i = x / dy / 2;
  int j = y / dx / 2;
  int pi = dirx > 0 ? i-1 : i;
  int ni = dirx > 0 ? i : i-1;
  int pj = diry > 0 ? j-1 : j;
  int nj = diry > 0 ? j : j-1;

  //cerr << "AT " << x/(ld)dy << " " << y/(ld)dx << " : " << i << " " << j << " | " << pi << " " << pj << " -> " << ni << " " << nj << endl;

  bool atx = (x % (dy * 2) == 0);
  bool aty = (y % (dx * 2) == 0);
  if(atx and aty) {
    vector nbs = {g(i, j), g(i-1, j), g(i, j-1), g(i-1, j-1)};
    sort(begin(nbs), end(nbs), greater<>());
    ans += abs(g(pi, pj) - nbs[1]) + abs(g(ni, nj) - nbs[1]);
  } else if(atx) {
    ans += abs(g(pi, j) - g(ni, j));
  } else if(aty) {
    ans += abs(g(i, pj) - g(i, nj));
  }
}

cout << ans << nl;
