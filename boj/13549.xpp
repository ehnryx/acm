int a, b;
cin >> a >> b;
const int n = 2 * max(a, b);
vector<int> dist(n+1, -1);
deque<pair<int, int>> bfs;
bfs.emplace_back(a, 0);
while(not empty(bfs)) {
  auto [u, d] = bfs.front();
  bfs.pop_front();
  if(dist[u] != -1) continue;
  dist[u] = d;
  if(u > 0 and dist[u-1] == -1) {
    bfs.emplace_back(u-1, d + 1);
  }
  if(u+1 <= n and dist[u+1] == -1) {
    bfs.emplace_back(u+1, d + 1);
  }
  if(2*u <= n and dist[2*u] == -1) {
    bfs.emplace_front(2*u, d);
  }
}
cout << dist[b] << nl;
