%:include "graph/dinic.h"
__main__:
#define MULTI_TEST
int n, m;
cin >> n >> m;
vector g(n+2, vector(m+2, 'x'));
for(int i=1; i<=n; i++) {
  for(int j=1; j<=m; j++) {
    cin >> g[i][j];
  }
}
auto get = [m](int i, int j) {
  return (i-1) * m + j-1;
};
dinic<int> graph(n*m + 2);
const int source = n*m;
const int sink = source + 1;
int ans = n*m;
for(int j=1; j<=m; j++) {
  for(int i=1; i<=n; i++) {
    if(g[i][j] != '.') {
      ans--;
      continue;
    }
    if(j % 2) {
      graph.add_edge(get(i, j), sink);
      continue;
    }
    graph.add_edge(source, get(i, j));
    for(auto [ni, nj] : {
        pair(i, j-1), pair(i-1, j-1), pair(i+1, j-1),
        pair(i, j+1), pair(i-1, j+1), pair(i+1, j+1),
        }) {
      if(g[ni][nj] == '.') {
        graph.add_edge(get(i, j), get(ni, nj));
      }
    }
  }
}
cout << ans - graph.flow(source, sink) << nl;
