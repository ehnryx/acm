__main__:
int n;
cin >> n;
vector<int> a(n);
for(int i=0; i<n; i++) {
  cin >> a[i];
}
int sum = accumulate(begin(a), end(a), 0);
vector dp(2*sum + 1, -1);
dp[sum] = 0;
for(int v : a) {
  vector ndp(2*sum + 1, -1);
  for(int i=0; i<=2*sum; i++) {
    if(dp[i] == -1) continue;
    // don't add v
    ndp[i] = max(ndp[i], dp[i]);
    // add v to first
    ndp[i + v] = max(ndp[i + v], dp[i] + v);
    // add v to second
    ndp[i - v] = max(ndp[i - v], dp[i]);
  }
  dp = move(ndp);
}
if(dp[sum]) {
  cout << dp[sum] << nl;
} else {
  cout << -1 << nl;
}
